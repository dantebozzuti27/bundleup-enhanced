{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dbozz/bundleup-enhanced/lib/roadmap-generator.js"],"sourcesContent":["// ============================================\n// ROADMAP GENERATOR - Templates & Rules Engine\n// Produces ordered solution blueprint\n// ============================================\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL,\n  process.env.SUPABASE_SERVICE_ROLE_KEY\n);\n\n/**\n * Roadmap Generator - Creates structured purchasing roadmap\n */\nexport class RoadmapGenerator {\n  \n  /**\n   * Generate a complete roadmap from parsed intent\n   * @param {object} parsedIntent - Output from IntentParser\n   * @param {object} options - Generation options\n   * @returns {object} Complete roadmap with ordering and dependencies\n   */\n  async generateRoadmap(parsedIntent, options = {}) {\n    \n    // Step 1: Load applicable templates\n    const template = await this.loadTemplate(parsedIntent.projectType);\n    \n    // Step 2: Load heuristics for this category\n    const heuristics = await this.loadHeuristics(parsedIntent.category);\n    \n    // Step 3: Merge template with parsed components\n    const mergedComponents = this.mergeWithTemplate(parsedIntent.components, template);\n    \n    // Step 4: Apply heuristics to refine requirements\n    const refinedComponents = this.applyHeuristics(mergedComponents, heuristics, parsedIntent);\n    \n    // Step 5: Determine dependencies and ordering\n    const orderedRoadmap = this.orderByDependencies(refinedComponents, template?.priority_order);\n    \n    // Step 6: Add decision points and alternatives\n    const roadmapWithAlternatives = this.addDecisionPoints(orderedRoadmap);\n    \n    return {\n      roadmapId: this.generateRoadmapId(),\n      projectType: parsedIntent.projectType,\n      category: parsedIntent.category,\n      roadmap: roadmapWithAlternatives,\n      estimatedTimeline: this.estimateTimeline(orderedRoadmap),\n      estimatedBudget: parsedIntent.estimatedBudget,\n      complexity: parsedIntent.complexity,\n      generatedAt: new Date().toISOString()\n    };\n  }\n  \n  /**\n   * Load template for project type\n   */\n  async loadTemplate(projectType) {\n    const { data: template, error } = await supabase\n      .from('project_templates')\n      .select('*')\n      .eq('project_type', projectType)\n      .single();\n    \n    if (error && error.code !== 'PGRST116') { // PGRST116 = not found\n      console.error('Error loading template:', error);\n    }\n    \n    return template;\n  }\n  \n  /**\n   * Load heuristics for category\n   */\n  async loadHeuristics(category) {\n    const { data: heuristics, error } = await supabase\n      .from('heuristics')\n      .select('*')\n      .eq('category', category);\n    \n    if (error) {\n      console.error('Error loading heuristics:', error);\n      return [];\n    }\n    \n    return heuristics || [];\n  }\n  \n  /**\n   * Merge parsed components with template\n   */\n  mergeWithTemplate(components, template) {\n    if (!template) return components;\n    \n    const templateItems = template.template_items || [];\n    const merged = [...components];\n    \n    // Add any template items not already in components\n    templateItems.forEach(templateItem => {\n      const exists = components.find(c => \n        c.componentName.toLowerCase() === templateItem.item.toLowerCase()\n      );\n      \n      if (!exists) {\n        merged.push({\n          componentName: templateItem.item,\n          category: templateItem.category,\n          priority: templateItem.priority,\n          quantity: templateItem.quantity,\n          specifications: {},\n          source: 'template',\n          reasoning: 'Recommended based on project template'\n        });\n      }\n    });\n    \n    return merged;\n  }\n  \n  /**\n   * Apply heuristics to refine requirements\n   */\n  applyHeuristics(components, heuristics, parsedIntent) {\n    if (!heuristics || heuristics.length === 0) return components;\n    \n    return components.map(component => {\n      const applicableHeuristics = heuristics.filter(h => \n        this.evaluateConditions(h.conditions, component, parsedIntent)\n      );\n      \n      // Apply recommendations from matching heuristics\n      applicableHeuristics.forEach(heuristic => {\n        component.specifications = {\n          ...component.specifications,\n          ...heuristic.recommendation\n        };\n        \n        component.heuristicApplied = component.heuristicApplied || [];\n        component.heuristicApplied.push({\n          name: heuristic.heuristic_name,\n          confidence: heuristic.confidence_score,\n          recommendation: heuristic.recommendation\n        });\n      });\n      \n      return component;\n    });\n  }\n  \n  /**\n   * Evaluate if heuristic conditions match\n   */\n  evaluateConditions(conditions, component, parsedIntent) {\n    // Simple condition evaluation - can be made more sophisticated\n    if (conditions.category && component.category !== conditions.category) {\n      return false;\n    }\n    \n    if (conditions.budget_range) {\n      const budget = parsedIntent.estimatedBudget?.max || Infinity;\n      if (budget < conditions.budget_range.min || budget > conditions.budget_range.max) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n  \n  /**\n   * Order components by dependencies\n   */\n  orderByDependencies(components, priorityOrder = {}) {\n    const dependencies = priorityOrder?.dependencies || {};\n    const ordered = [];\n    const visited = new Set();\n    \n    // Helper function for topological sort\n    const visit = (componentName) => {\n      if (visited.has(componentName)) return;\n      \n      const component = components.find(c => \n        c.category === componentName || \n        c.componentName.toLowerCase().includes(componentName.toLowerCase())\n      );\n      \n      if (!component) return;\n      \n      // Visit dependencies first\n      const deps = dependencies[componentName] || [];\n      deps.forEach(dep => visit(dep));\n      \n      visited.add(componentName);\n      ordered.push(component);\n    };\n    \n    // Process all components\n    components.forEach(c => {\n      visit(c.category || c.componentName);\n    });\n    \n    // Add any components not in dependency graph\n    components.forEach(c => {\n      if (!ordered.includes(c)) {\n        ordered.push(c);\n      }\n    });\n    \n    // Add step numbers\n    return ordered.map((component, index) => ({\n      ...component,\n      step: index + 1,\n      dependencies: dependencies[component.category] || []\n    }));\n  }\n  \n  /**\n   * Add decision points and alternatives to roadmap\n   */\n  addDecisionPoints(orderedRoadmap) {\n    return orderedRoadmap.map(step => {\n      // Identify optional components as decision points\n      if (step.priority === 'optional') {\n        step.decisionPoint = {\n          question: `Do you want to include ${step.componentName}?`,\n          ifYes: `Proceed with ${step.componentName}`,\n          ifNo: 'Skip this component',\n          recommendation: step.reasoning\n        };\n      }\n      \n      // Identify components with spec choices\n      if (step.specifications && Object.keys(step.specifications).length > 0) {\n        step.specificationChoices = Object.keys(step.specifications).map(spec => ({\n          specification: spec,\n          options: ['budget', 'mid-range', 'premium'],\n          recommendation: step.specifications[spec]\n        }));\n      }\n      \n      return step;\n    });\n  }\n  \n  /**\n   * Estimate timeline for roadmap\n   */\n  estimateTimeline(roadmap) {\n    const essentialCount = roadmap.filter(c => c.priority === 'essential').length;\n    const recommendedCount = roadmap.filter(c => c.priority === 'recommended').length;\n    \n    // Rough estimate: 30min research per essential, 15min per recommended\n    const researchMinutes = (essentialCount * 30) + (recommendedCount * 15);\n    const purchaseMinutes = 30; // Time to complete purchases\n    \n    return {\n      researchTime: `${Math.ceil(researchMinutes / 60)} hours`,\n      purchaseTime: `${purchaseMinutes} minutes`,\n      totalEstimate: `${Math.ceil((researchMinutes + purchaseMinutes) / 60)} hours`,\n      steps: roadmap.length\n    };\n  }\n  \n  /**\n   * Generate unique roadmap ID\n   */\n  generateRoadmapId() {\n    return `roadmap_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n  \n  /**\n   * Save roadmap to database\n   */\n  async saveRoadmap(roadmap, userId = null, sessionId = null) {\n    const { data, error } = await supabase\n      .from('user_roadmaps')\n      .insert({\n        user_id: userId,\n        session_id: sessionId || roadmap.roadmapId,\n        original_intent: roadmap.projectType,\n        parsed_components: roadmap.roadmap.map(r => ({\n          component: r.componentName,\n          priority: r.priority\n        })),\n        generated_roadmap: roadmap.roadmap,\n        optimization_preferences: {}\n      })\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error saving roadmap:', error);\n      throw error;\n    }\n    \n    return data;\n  }\n}\n\nexport default RoadmapGenerator;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/dbozz/bundleup-enhanced/app/api/generate-roadmap/route.js"],"sourcesContent":["// ============================================\n// API ROUTE: /api/generate-roadmap\n// Roadmap Generator - Creates solution blueprint\n// ============================================\n\nimport { NextResponse } from 'next/server';\nimport RoadmapGenerator from '@/lib/roadmap-generator';\n\nexport async function POST(request) {\n  try {\n    const { parsedIntent, userId, sessionId } = await request.json();\n    \n    if (!parsedIntent || !parsedIntent.components) {\n      return NextResponse.json(\n        { error: 'Parsed intent with components is required' },\n        { status: 400 }\n      );\n    }\n    \n    // Initialize Roadmap Generator\n    const generator = new RoadmapGenerator();\n    \n    // Generate roadmap\n    const roadmap = await generator.generateRoadmap(parsedIntent);\n    \n    // Save roadmap to database if user is provided\n    if (userId || sessionId) {\n      try {\n        await generator.saveRoadmap(roadmap, userId, sessionId);\n      } catch (dbError) {\n        console.error('Failed to save roadmap:', dbError);\n        // Continue even if save fails\n      }\n    }\n    \n    return NextResponse.json({\n      success: true,\n      roadmap\n    });\n    \n  } catch (error) {\n    console.error('Roadmap generation error:', error);\n    \n    return NextResponse.json(\n      { \n        error: 'Failed to generate roadmap',\n        details: error.message \n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport const runtime = 'nodejs';\nexport const maxDuration = 30;\n"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,mCAAmC;AACnC,iDAAiD;AACjD,+CAA+C;;;;;;;;;AAE/C;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9D,IAAI,CAAC,gBAAgB,CAAC,aAAa,UAAU,EAAE;YAC7C,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA4C,GACrD;gBAAE,QAAQ;YAAI;QAElB;QAEA,+BAA+B;QAC/B,MAAM,YAAY,IAAI,wIAAgB;QAEtC,mBAAmB;QACnB,MAAM,UAAU,MAAM,UAAU,eAAe,CAAC;QAEhD,+CAA+C;QAC/C,IAAI,UAAU,WAAW;YACvB,IAAI;gBACF,MAAM,UAAU,WAAW,CAAC,SAAS,QAAQ;YAC/C,EAAE,OAAO,SAAS;gBAChB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,8BAA8B;YAChC;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAE3C,OAAO,gJAAY,CAAC,IAAI,CACtB;YACE,OAAO;YACP,SAAS,MAAM,OAAO;QACxB,GACA;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,MAAM,UAAU;AAChB,MAAM,cAAc","debugId":null}}]
}